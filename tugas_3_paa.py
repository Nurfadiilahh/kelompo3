# -*- coding: utf-8 -*-
"""tugas 3 PAA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MjUO05DtiIMSsZFbqxGFRF0Y7Japn31t

# ***`algoritma bubble sort`***
"""

def bubble_sort(arr):
    n = len(arr)
    for i in range(n):
        for j in range(0, n-i-1):
            if arr[j] > arr[j+1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]

# Contoh penggunaan
array = [64, 34, 25, 12, 22, 11, 90]
bubble_sort(array)
print("Array yang sudah diurutkan menggunakan Bubble Sort:")
print(array)

"""# ***algoritma insertion sort***"""

def insertion_sort(arr):
    for i in range(1, len(arr)):
        key = arr[i]
        j = i - 1
        while j >= 0 and arr[j] > key:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = key

# Contoh penggunaan
array = [64, 34, 25, 12, 22, 11, 90]
insertion_sort(array)
print("Array yang sudah diurutkan menggunakan Insertion Sort:")
print(array)

"""Perbandingan antara Bubble Sort dan Insertion Sort dalam hal keoptimalan dapat dilihat dari kompleksitas waktu dan performa masing-masing algoritma.

Kompleksitas Waktu:

Bubble Sort memiliki kompleksitas waktu rata-rata dan terburuk O(n^2), di mana n adalah jumlah elemen dalam array. Ini berarti Bubble Sort akan membutuhkan waktu yang lebih lama untuk mengurutkan array semakin besar ukurannya.
Insertion Sort juga memiliki kompleksitas waktu rata-rata dan terburuk O(n^2), tetapi dalam beberapa kasus, seperti ketika array sudah hampir terurut, Insertion Sort dapat mencapai kinerja yang lebih baik daripada Bubble Sort.
Performa:

Bubble Sort melakukan banyak pertukaran elemen, bahkan jika array sudah terurut. Oleh karena itu, Bubble Sort mungkin akan melakukan lebih banyak operasi yang tidak perlu, sehingga memperlambat kinerjanya.
Insertion Sort hanya melakukan pertukaran elemen jika diperlukan dan secara alami efisien dalam mengurutkan array yang hampir terurut. Ini membuat Insertion Sort cenderung memiliki performa yang lebih baik daripada Bubble Sort dalam banyak kasus.
# Berdasarkan perbandingan di atas, secara umum, Insertion Sort cenderung lebih optimal daripada Bubble Sort. Namun, penting untuk diingat bahwa baik Bubble Sort maupun Insertion Sort tidak efisien untuk kasus-kasus dengan jumlah data yang sangat besar. Dalam kasus seperti itu, algoritma pengurutan yang lebih efisien seperti Merge Sort atau Quick Sort lebih disarankan.
"""